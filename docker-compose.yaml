version: '3.8'

services:
  timetrove-backend:
    image: devyeonsu/timetrove-be:latest  # Docker Hub에서 백엔드 이미지 가져오기
    container_name: timetrove-backend
    environment:
      # 백엔드 환경 변수 설정
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      EC2_IP_ADDRESS: ${EC2_IP_ADDRESS}
    ports:
      - "8080:8080"
    depends_on:
      - redis
    networks:
      - timetrove-network
    restart: always

  timetrove-frontend:
    image: devyeonsu/timetrove-fe:latest
    container_name: timetrove-frontend
    ports:
      - "80:80"
    networks:
      - timetrove-network
    depends_on:
      - timetrove-backend

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    networks:
      - timetrove-network
    restart: always

networks:
  timetrove-network:
    external: true  # 외부에서 생성된 네트워크 사용